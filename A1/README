This directory contains the following files:

- allheaders.h.gch which is a pre-compiled header file.
- libsclpshared.so which is a shared object file.
- parser.tab.h which contains the token names and codes generated by yacc.
- sclp which is the reference implementstion
- storetokens.hh contains the declaration of the function which you can call to store 
  tokens and print them.
- test1.c is a simple test file.

You need to include all the header files in your script.

You can link the shared object file with lex.yy.c by using the command

g++ lex.yy.c -include allheaders.h -L. -Wl,-rpath=. lex.yy.c -o yoursclp -lsclpshared -lfl -ly 

I strongly recommend that you learn to use a Makefile (program make, try `man make') and put 
the commands in the Makefile.

Here are a couple of examples of a function call to print the tokens:

	store_token_name("NAME",yytext,yylineno);
	store_token_name("ASSIGN_OP",yytext,yylineno);

The token codes that need to be returned to the parser are included in the parser.tab.h file. 
If a token code is not included, it means that you have to return the character code. For 
example, the token code for the plus operator is '+'.

The names printed by the `-token' option can be found out by running the reference 
implementation and giving the appropriate name in the first argument of the 
store_token_name function.


